
app1:     file format elf32-i386


Disassembly of section .init:

080482e4 <_init>:
 80482e4:	55                   	push   %ebp
 80482e5:	89 e5                	mov    %esp,%ebp
 80482e7:	53                   	push   %ebx
 80482e8:	83 ec 04             	sub    $0x4,%esp
 80482eb:	e8 00 00 00 00       	call   80482f0 <_init+0xc>
 80482f0:	5b                   	pop    %ebx
 80482f1:	81 c3 04 1d 00 00    	add    $0x1d04,%ebx
 80482f7:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 80482fd:	85 d2                	test   %edx,%edx
 80482ff:	74 05                	je     8048306 <_init+0x22>
 8048301:	e8 1e 00 00 00       	call   8048324 <__gmon_start__@plt>
 8048306:	e8 f5 00 00 00       	call   8048400 <frame_dummy>
 804830b:	e8 f0 01 00 00       	call   8048500 <__do_global_ctors_aux>
 8048310:	58                   	pop    %eax
 8048311:	5b                   	pop    %ebx
 8048312:	c9                   	leave  
 8048313:	c3                   	ret    

Disassembly of section .plt:

08048314 <__gmon_start__@plt-0x10>:
 8048314:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 804831a:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048320:	00 00                	add    %al,(%eax)
	...

08048324 <__gmon_start__@plt>:
 8048324:	ff 25 00 a0 04 08    	jmp    *0x804a000
 804832a:	68 00 00 00 00       	push   $0x0
 804832f:	e9 e0 ff ff ff       	jmp    8048314 <_init+0x30>

08048334 <memset@plt>:
 8048334:	ff 25 04 a0 04 08    	jmp    *0x804a004
 804833a:	68 08 00 00 00       	push   $0x8
 804833f:	e9 d0 ff ff ff       	jmp    8048314 <_init+0x30>

08048344 <__libc_start_main@plt>:
 8048344:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804834a:	68 10 00 00 00       	push   $0x10
 804834f:	e9 c0 ff ff ff       	jmp    8048314 <_init+0x30>

08048354 <sigaction@plt>:
 8048354:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 804835a:	68 18 00 00 00       	push   $0x18
 804835f:	e9 b0 ff ff ff       	jmp    8048314 <_init+0x30>

Disassembly of section .text:

08048370 <_start>:
 8048370:	31 ed                	xor    %ebp,%ebp
 8048372:	5e                   	pop    %esi
 8048373:	89 e1                	mov    %esp,%ecx
 8048375:	83 e4 f0             	and    $0xfffffff0,%esp
 8048378:	50                   	push   %eax
 8048379:	54                   	push   %esp
 804837a:	52                   	push   %edx
 804837b:	68 90 84 04 08       	push   $0x8048490
 8048380:	68 a0 84 04 08       	push   $0x80484a0
 8048385:	51                   	push   %ecx
 8048386:	56                   	push   %esi
 8048387:	68 33 84 04 08       	push   $0x8048433
 804838c:	e8 b3 ff ff ff       	call   8048344 <__libc_start_main@plt>
 8048391:	f4                   	hlt    
 8048392:	90                   	nop
 8048393:	90                   	nop
 8048394:	90                   	nop
 8048395:	90                   	nop
 8048396:	90                   	nop
 8048397:	90                   	nop
 8048398:	90                   	nop
 8048399:	90                   	nop
 804839a:	90                   	nop
 804839b:	90                   	nop
 804839c:	90                   	nop
 804839d:	90                   	nop
 804839e:	90                   	nop
 804839f:	90                   	nop

080483a0 <__do_global_dtors_aux>:
 80483a0:	55                   	push   %ebp
 80483a1:	89 e5                	mov    %esp,%ebp
 80483a3:	53                   	push   %ebx
 80483a4:	83 ec 04             	sub    $0x4,%esp
 80483a7:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 80483ae:	75 3f                	jne    80483ef <__do_global_dtors_aux+0x4f>
 80483b0:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483b5:	bb 18 9f 04 08       	mov    $0x8049f18,%ebx
 80483ba:	81 eb 14 9f 04 08    	sub    $0x8049f14,%ebx
 80483c0:	c1 fb 02             	sar    $0x2,%ebx
 80483c3:	83 eb 01             	sub    $0x1,%ebx
 80483c6:	39 d8                	cmp    %ebx,%eax
 80483c8:	73 1e                	jae    80483e8 <__do_global_dtors_aux+0x48>
 80483ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483d0:	83 c0 01             	add    $0x1,%eax
 80483d3:	a3 1c a0 04 08       	mov    %eax,0x804a01c
 80483d8:	ff 14 85 14 9f 04 08 	call   *0x8049f14(,%eax,4)
 80483df:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483e4:	39 d8                	cmp    %ebx,%eax
 80483e6:	72 e8                	jb     80483d0 <__do_global_dtors_aux+0x30>
 80483e8:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483ef:	83 c4 04             	add    $0x4,%esp
 80483f2:	5b                   	pop    %ebx
 80483f3:	5d                   	pop    %ebp
 80483f4:	c3                   	ret    
 80483f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048400 <frame_dummy>:
 8048400:	55                   	push   %ebp
 8048401:	89 e5                	mov    %esp,%ebp
 8048403:	83 ec 18             	sub    $0x18,%esp
 8048406:	a1 1c 9f 04 08       	mov    0x8049f1c,%eax
 804840b:	85 c0                	test   %eax,%eax
 804840d:	74 12                	je     8048421 <frame_dummy+0x21>
 804840f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048414:	85 c0                	test   %eax,%eax
 8048416:	74 09                	je     8048421 <frame_dummy+0x21>
 8048418:	c7 04 24 1c 9f 04 08 	movl   $0x8049f1c,(%esp)
 804841f:	ff d0                	call   *%eax
 8048421:	c9                   	leave  
 8048422:	c3                   	ret    
 8048423:	90                   	nop

08048424 <sig_int>:
#else
int a = 0;
#endif

void sig_int(int signo)
{
 8048424:	55                   	push   %ebp
 8048425:	89 e5                	mov    %esp,%ebp
	a = 1;
 8048427:	c7 05 20 a0 04 08 01 	movl   $0x1,0x804a020
 804842e:	00 00 00 
}
 8048431:	5d                   	pop    %ebp
 8048432:	c3                   	ret    

08048433 <main>:
 *gcc -g volatile.c -o app 
 *gcc -g volatile.c -o app  -O2
 *
 * */
int main(void)
{
 8048433:	55                   	push   %ebp
 8048434:	89 e5                	mov    %esp,%ebp
 8048436:	83 e4 f0             	and    $0xfffffff0,%esp
 8048439:	81 ec a0 00 00 00    	sub    $0xa0,%esp
	struct sigaction act;
	memset(&act, 0, sizeof(struct sigaction));
 804843f:	c7 44 24 08 8c 00 00 	movl   $0x8c,0x8(%esp)
 8048446:	00 
 8048447:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804844e:	00 
 804844f:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048453:	89 04 24             	mov    %eax,(%esp)
 8048456:	e8 d9 fe ff ff       	call   8048334 <memset@plt>
	act.sa_handler = sig_int;
 804845b:	c7 44 24 14 24 84 04 	movl   $0x8048424,0x14(%esp)
 8048462:	08 
	sigaction(SIGINT, &act, NULL);
 8048463:	8d 44 24 14          	lea    0x14(%esp),%eax
 8048467:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804846e:	00 
 804846f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048473:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 804847a:	e8 d5 fe ff ff       	call   8048354 <sigaction@plt>

	while(!a);
 804847f:	a1 20 a0 04 08       	mov    0x804a020,%eax
 8048484:	85 c0                	test   %eax,%eax
 8048486:	74 f7                	je     804847f <main+0x4c>

	return 0;
 8048488:	b8 00 00 00 00       	mov    $0x0,%eax
}
 804848d:	c9                   	leave  
 804848e:	c3                   	ret    
 804848f:	90                   	nop

08048490 <__libc_csu_fini>:
 8048490:	55                   	push   %ebp
 8048491:	89 e5                	mov    %esp,%ebp
 8048493:	5d                   	pop    %ebp
 8048494:	c3                   	ret    
 8048495:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048499:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484a0 <__libc_csu_init>:
 80484a0:	55                   	push   %ebp
 80484a1:	89 e5                	mov    %esp,%ebp
 80484a3:	57                   	push   %edi
 80484a4:	56                   	push   %esi
 80484a5:	53                   	push   %ebx
 80484a6:	e8 4f 00 00 00       	call   80484fa <__i686.get_pc_thunk.bx>
 80484ab:	81 c3 49 1b 00 00    	add    $0x1b49,%ebx
 80484b1:	83 ec 1c             	sub    $0x1c,%esp
 80484b4:	e8 2b fe ff ff       	call   80482e4 <_init>
 80484b9:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 80484bf:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 80484c5:	29 c7                	sub    %eax,%edi
 80484c7:	c1 ff 02             	sar    $0x2,%edi
 80484ca:	85 ff                	test   %edi,%edi
 80484cc:	74 24                	je     80484f2 <__libc_csu_init+0x52>
 80484ce:	31 f6                	xor    %esi,%esi
 80484d0:	8b 45 10             	mov    0x10(%ebp),%eax
 80484d3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484d7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484da:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484de:	8b 45 08             	mov    0x8(%ebp),%eax
 80484e1:	89 04 24             	mov    %eax,(%esp)
 80484e4:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 80484eb:	83 c6 01             	add    $0x1,%esi
 80484ee:	39 fe                	cmp    %edi,%esi
 80484f0:	72 de                	jb     80484d0 <__libc_csu_init+0x30>
 80484f2:	83 c4 1c             	add    $0x1c,%esp
 80484f5:	5b                   	pop    %ebx
 80484f6:	5e                   	pop    %esi
 80484f7:	5f                   	pop    %edi
 80484f8:	5d                   	pop    %ebp
 80484f9:	c3                   	ret    

080484fa <__i686.get_pc_thunk.bx>:
 80484fa:	8b 1c 24             	mov    (%esp),%ebx
 80484fd:	c3                   	ret    
 80484fe:	90                   	nop
 80484ff:	90                   	nop

08048500 <__do_global_ctors_aux>:
 8048500:	55                   	push   %ebp
 8048501:	89 e5                	mov    %esp,%ebp
 8048503:	53                   	push   %ebx
 8048504:	83 ec 04             	sub    $0x4,%esp
 8048507:	a1 0c 9f 04 08       	mov    0x8049f0c,%eax
 804850c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804850f:	74 13                	je     8048524 <__do_global_ctors_aux+0x24>
 8048511:	bb 0c 9f 04 08       	mov    $0x8049f0c,%ebx
 8048516:	66 90                	xchg   %ax,%ax
 8048518:	83 eb 04             	sub    $0x4,%ebx
 804851b:	ff d0                	call   *%eax
 804851d:	8b 03                	mov    (%ebx),%eax
 804851f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048522:	75 f4                	jne    8048518 <__do_global_ctors_aux+0x18>
 8048524:	83 c4 04             	add    $0x4,%esp
 8048527:	5b                   	pop    %ebx
 8048528:	5d                   	pop    %ebp
 8048529:	c3                   	ret    
 804852a:	90                   	nop
 804852b:	90                   	nop

Disassembly of section .fini:

0804852c <_fini>:
 804852c:	55                   	push   %ebp
 804852d:	89 e5                	mov    %esp,%ebp
 804852f:	53                   	push   %ebx
 8048530:	83 ec 04             	sub    $0x4,%esp
 8048533:	e8 00 00 00 00       	call   8048538 <_fini+0xc>
 8048538:	5b                   	pop    %ebx
 8048539:	81 c3 bc 1a 00 00    	add    $0x1abc,%ebx
 804853f:	e8 5c fe ff ff       	call   80483a0 <__do_global_dtors_aux>
 8048544:	59                   	pop    %ecx
 8048545:	5b                   	pop    %ebx
 8048546:	c9                   	leave  
 8048547:	c3                   	ret    
