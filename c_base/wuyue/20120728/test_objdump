
test:     file format elf32-i386


Disassembly of section .init:

08048304 <_init>:
 8048304:	55                   	push   %ebp
 8048305:	89 e5                	mov    %esp,%ebp
 8048307:	53                   	push   %ebx
 8048308:	83 ec 04             	sub    $0x4,%esp
 804830b:	e8 00 00 00 00       	call   8048310 <_init+0xc>
 8048310:	5b                   	pop    %ebx
 8048311:	81 c3 e4 1c 00 00    	add    $0x1ce4,%ebx
 8048317:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 804831d:	85 d2                	test   %edx,%edx
 804831f:	74 05                	je     8048326 <_init+0x22>
 8048321:	e8 1e 00 00 00       	call   8048344 <__gmon_start__@plt>
 8048326:	e8 f5 00 00 00       	call   8048420 <frame_dummy>
 804832b:	e8 f0 01 00 00       	call   8048520 <__do_global_ctors_aux>
 8048330:	58                   	pop    %eax
 8048331:	5b                   	pop    %ebx
 8048332:	c9                   	leave  
 8048333:	c3                   	ret    

Disassembly of section .plt:

08048334 <__gmon_start__@plt-0x10>:
 8048334:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 804833a:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048340:	00 00                	add    %al,(%eax)
	...

08048344 <__gmon_start__@plt>:
 8048344:	ff 25 00 a0 04 08    	jmp    *0x804a000
 804834a:	68 00 00 00 00       	push   $0x0
 804834f:	e9 e0 ff ff ff       	jmp    8048334 <_init+0x30>

08048354 <__libc_start_main@plt>:
 8048354:	ff 25 04 a0 04 08    	jmp    *0x804a004
 804835a:	68 08 00 00 00       	push   $0x8
 804835f:	e9 d0 ff ff ff       	jmp    8048334 <_init+0x30>

08048364 <printf@plt>:
 8048364:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836a:	68 10 00 00 00       	push   $0x10
 804836f:	e9 c0 ff ff ff       	jmp    8048334 <_init+0x30>

08048374 <__stack_chk_fail@plt>:
 8048374:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 804837a:	68 18 00 00 00       	push   $0x18
 804837f:	e9 b0 ff ff ff       	jmp    8048334 <_init+0x30>

Disassembly of section .text:

08048390 <_start>:
 8048390:	31 ed                	xor    %ebp,%ebp
 8048392:	5e                   	pop    %esi
 8048393:	89 e1                	mov    %esp,%ecx
 8048395:	83 e4 f0             	and    $0xfffffff0,%esp
 8048398:	50                   	push   %eax
 8048399:	54                   	push   %esp
 804839a:	52                   	push   %edx
 804839b:	68 b0 84 04 08       	push   $0x80484b0
 80483a0:	68 c0 84 04 08       	push   $0x80484c0
 80483a5:	51                   	push   %ecx
 80483a6:	56                   	push   %esi
 80483a7:	68 44 84 04 08       	push   $0x8048444
 80483ac:	e8 a3 ff ff ff       	call   8048354 <__libc_start_main@plt>
 80483b1:	f4                   	hlt    
 80483b2:	90                   	nop
 80483b3:	90                   	nop
 80483b4:	90                   	nop
 80483b5:	90                   	nop
 80483b6:	90                   	nop
 80483b7:	90                   	nop
 80483b8:	90                   	nop
 80483b9:	90                   	nop
 80483ba:	90                   	nop
 80483bb:	90                   	nop
 80483bc:	90                   	nop
 80483bd:	90                   	nop
 80483be:	90                   	nop
 80483bf:	90                   	nop

080483c0 <__do_global_dtors_aux>:
 80483c0:	55                   	push   %ebp
 80483c1:	89 e5                	mov    %esp,%ebp
 80483c3:	53                   	push   %ebx
 80483c4:	83 ec 04             	sub    $0x4,%esp
 80483c7:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 80483ce:	75 3f                	jne    804840f <__do_global_dtors_aux+0x4f>
 80483d0:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 80483d5:	bb 18 9f 04 08       	mov    $0x8049f18,%ebx
 80483da:	81 eb 14 9f 04 08    	sub    $0x8049f14,%ebx
 80483e0:	c1 fb 02             	sar    $0x2,%ebx
 80483e3:	83 eb 01             	sub    $0x1,%ebx
 80483e6:	39 d8                	cmp    %ebx,%eax
 80483e8:	73 1e                	jae    8048408 <__do_global_dtors_aux+0x48>
 80483ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483f0:	83 c0 01             	add    $0x1,%eax
 80483f3:	a3 1c a0 04 08       	mov    %eax,0x804a01c
 80483f8:	ff 14 85 14 9f 04 08 	call   *0x8049f14(,%eax,4)
 80483ff:	a1 1c a0 04 08       	mov    0x804a01c,%eax
 8048404:	39 d8                	cmp    %ebx,%eax
 8048406:	72 e8                	jb     80483f0 <__do_global_dtors_aux+0x30>
 8048408:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 804840f:	83 c4 04             	add    $0x4,%esp
 8048412:	5b                   	pop    %ebx
 8048413:	5d                   	pop    %ebp
 8048414:	c3                   	ret    
 8048415:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048420 <frame_dummy>:
 8048420:	55                   	push   %ebp
 8048421:	89 e5                	mov    %esp,%ebp
 8048423:	83 ec 18             	sub    $0x18,%esp
 8048426:	a1 1c 9f 04 08       	mov    0x8049f1c,%eax
 804842b:	85 c0                	test   %eax,%eax
 804842d:	74 12                	je     8048441 <frame_dummy+0x21>
 804842f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048434:	85 c0                	test   %eax,%eax
 8048436:	74 09                	je     8048441 <frame_dummy+0x21>
 8048438:	c7 04 24 1c 9f 04 08 	movl   $0x8049f1c,(%esp)
 804843f:	ff d0                	call   *%eax
 8048441:	c9                   	leave  
 8048442:	c3                   	ret    
 8048443:	90                   	nop

08048444 <main>:
 ************************************************************************/

#include <stdio.h>

int main(void)
{
 8048444:	55                   	push   %ebp
 8048445:	89 e5                	mov    %esp,%ebp
 8048447:	83 e4 f0             	and    $0xfffffff0,%esp
 804844a:	83 ec 30             	sub    $0x30,%esp
 804844d:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048453:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8048457:	31 c0                	xor    %eax,%eax
	char buf[] = "hello world!";
 8048459:	c7 44 24 1f 68 65 6c 	movl   $0x6c6c6568,0x1f(%esp)
 8048460:	6c 
 8048461:	c7 44 24 23 6f 20 77 	movl   $0x6f77206f,0x23(%esp)
 8048468:	6f 
 8048469:	c7 44 24 27 72 6c 64 	movl   $0x21646c72,0x27(%esp)
 8048470:	21 
 8048471:	c6 44 24 2b 00       	movb   $0x0,0x2b(%esp)
	
	printf("%p\n", buf);
 8048476:	b8 70 85 04 08       	mov    $0x8048570,%eax
 804847b:	8d 54 24 1f          	lea    0x1f(%esp),%edx
 804847f:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048483:	89 04 24             	mov    %eax,(%esp)
 8048486:	e8 d9 fe ff ff       	call   8048364 <printf@plt>

	return 0;
 804848b:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048490:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 8048494:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804849b:	74 05                	je     80484a2 <main+0x5e>
 804849d:	e8 d2 fe ff ff       	call   8048374 <__stack_chk_fail@plt>
 80484a2:	c9                   	leave  
 80484a3:	c3                   	ret    
 80484a4:	90                   	nop
 80484a5:	90                   	nop
 80484a6:	90                   	nop
 80484a7:	90                   	nop
 80484a8:	90                   	nop
 80484a9:	90                   	nop
 80484aa:	90                   	nop
 80484ab:	90                   	nop
 80484ac:	90                   	nop
 80484ad:	90                   	nop
 80484ae:	90                   	nop
 80484af:	90                   	nop

080484b0 <__libc_csu_fini>:
 80484b0:	55                   	push   %ebp
 80484b1:	89 e5                	mov    %esp,%ebp
 80484b3:	5d                   	pop    %ebp
 80484b4:	c3                   	ret    
 80484b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484c0 <__libc_csu_init>:
 80484c0:	55                   	push   %ebp
 80484c1:	89 e5                	mov    %esp,%ebp
 80484c3:	57                   	push   %edi
 80484c4:	56                   	push   %esi
 80484c5:	53                   	push   %ebx
 80484c6:	e8 4f 00 00 00       	call   804851a <__i686.get_pc_thunk.bx>
 80484cb:	81 c3 29 1b 00 00    	add    $0x1b29,%ebx
 80484d1:	83 ec 1c             	sub    $0x1c,%esp
 80484d4:	e8 2b fe ff ff       	call   8048304 <_init>
 80484d9:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 80484df:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 80484e5:	29 c7                	sub    %eax,%edi
 80484e7:	c1 ff 02             	sar    $0x2,%edi
 80484ea:	85 ff                	test   %edi,%edi
 80484ec:	74 24                	je     8048512 <__libc_csu_init+0x52>
 80484ee:	31 f6                	xor    %esi,%esi
 80484f0:	8b 45 10             	mov    0x10(%ebp),%eax
 80484f3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484f7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484fa:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484fe:	8b 45 08             	mov    0x8(%ebp),%eax
 8048501:	89 04 24             	mov    %eax,(%esp)
 8048504:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 804850b:	83 c6 01             	add    $0x1,%esi
 804850e:	39 fe                	cmp    %edi,%esi
 8048510:	72 de                	jb     80484f0 <__libc_csu_init+0x30>
 8048512:	83 c4 1c             	add    $0x1c,%esp
 8048515:	5b                   	pop    %ebx
 8048516:	5e                   	pop    %esi
 8048517:	5f                   	pop    %edi
 8048518:	5d                   	pop    %ebp
 8048519:	c3                   	ret    

0804851a <__i686.get_pc_thunk.bx>:
 804851a:	8b 1c 24             	mov    (%esp),%ebx
 804851d:	c3                   	ret    
 804851e:	90                   	nop
 804851f:	90                   	nop

08048520 <__do_global_ctors_aux>:
 8048520:	55                   	push   %ebp
 8048521:	89 e5                	mov    %esp,%ebp
 8048523:	53                   	push   %ebx
 8048524:	83 ec 04             	sub    $0x4,%esp
 8048527:	a1 0c 9f 04 08       	mov    0x8049f0c,%eax
 804852c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804852f:	74 13                	je     8048544 <__do_global_ctors_aux+0x24>
 8048531:	bb 0c 9f 04 08       	mov    $0x8049f0c,%ebx
 8048536:	66 90                	xchg   %ax,%ax
 8048538:	83 eb 04             	sub    $0x4,%ebx
 804853b:	ff d0                	call   *%eax
 804853d:	8b 03                	mov    (%ebx),%eax
 804853f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048542:	75 f4                	jne    8048538 <__do_global_ctors_aux+0x18>
 8048544:	83 c4 04             	add    $0x4,%esp
 8048547:	5b                   	pop    %ebx
 8048548:	5d                   	pop    %ebp
 8048549:	c3                   	ret    
 804854a:	90                   	nop
 804854b:	90                   	nop

Disassembly of section .fini:

0804854c <_fini>:
 804854c:	55                   	push   %ebp
 804854d:	89 e5                	mov    %esp,%ebp
 804854f:	53                   	push   %ebx
 8048550:	83 ec 04             	sub    $0x4,%esp
 8048553:	e8 00 00 00 00       	call   8048558 <_fini+0xc>
 8048558:	5b                   	pop    %ebx
 8048559:	81 c3 9c 1a 00 00    	add    $0x1a9c,%ebx
 804855f:	e8 5c fe ff ff       	call   80483c0 <__do_global_dtors_aux>
 8048564:	59                   	pop    %ecx
 8048565:	5b                   	pop    %ebx
 8048566:	c9                   	leave  
 8048567:	c3                   	ret    
