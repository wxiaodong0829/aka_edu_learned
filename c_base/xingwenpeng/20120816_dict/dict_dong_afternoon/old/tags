!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BINARY_DEFAULT_H_	binary_default.h	9;"	d
BINARY_DEFAULT_H_	binary_user_add.h	9;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -g$/;"	m
DEBUG_H_	debug.h	9;"	d
DEBUG_H_	ok_word_default/debug.h	9;"	d
DICTIONARY_H_	dictionary.h	2;"	d
DICTIONARY_H_	ok_word_default/dictionary.h	2;"	d
DIRNAME	Makefile	/^DIRNAME = $(notdir $(PWD))$/;"	m
FILENAME	ok_word_default/word_default.h	18;"	d
FILENAME	word_default.h	18;"	d
FILENAME	word_user_add.h	18;"	d
N	shell_test.c	4;"	d	file:
OBJ	Makefile	/^OBJ = $(SRC:%.c=%.o)$/;"	m
PRINT	debug.h	12;"	d
PRINT	debug.h	16;"	d
PRINT	debug.h	20;"	d
PRINT	ok_word_default/debug.h	12;"	d
PRINT	ok_word_default/debug.h	16;"	d
PRINT	ok_word_default/debug.h	20;"	d
PRINT_P	debug.h	13;"	d
PRINT_P	debug.h	17;"	d
PRINT_P	debug.h	21;"	d
PRINT_P	ok_word_default/debug.h	13;"	d
PRINT_P	ok_word_default/debug.h	17;"	d
PRINT_P	ok_word_default/debug.h	21;"	d
PRINT_S	debug.h	14;"	d
PRINT_S	debug.h	18;"	d
PRINT_S	debug.h	22;"	d
PRINT_S	ok_word_default/debug.h	14;"	d
PRINT_S	ok_word_default/debug.h	18;"	d
PRINT_S	ok_word_default/debug.h	22;"	d
PRJ	Makefile	/^PRJ = $(DIRNAME)$/;"	m
PWD	Makefile	/^PWD = $(shell pwd)$/;"	m
SRC	Makefile	/^SRC = $(wildcard *.c)$/;"	m
TARGET	Makefile	/^TARGET = $(PRJ)$/;"	m
WORD_DEFAULT_H_	ok_word_default/word_default.h	9;"	d
WORD_DEFAULT_H_	word_default.h	9;"	d
WORD_DEFAULT_H_	word_user_add.h	9;"	d
a	shell_test.c	/^int a[N];$/;"	v
bd_binary_default	binary_default.c	/^void *bd_binary_default(char *txt_file_name, char *binary_file_name)$/;"	f
bd_binary_default	binary_user_add.c	/^void *bd_binary_default(char *txt_file_name, char *binary_file_name)$/;"	f
bd_binsearch	binary_default.c	/^static dict_bin_t *bd_binsearch(dict_bin_t *head_p, int w_count, char *key_word)$/;"	f	file:
bd_binsearch	binary_user_add.c	/^static dict_bin_t *bd_binsearch(dict_bin_t *head_p, int w_count, char *key_word)$/;"	f	file:
bd_copy_from_wd	binary_default.c	/^static	void bd_copy_from_wd(dict_bin_t *b_head_p, dict_elem_t *head_p, int w_count)$/;"	f	file:
bd_copy_from_wd	binary_user_add.c	/^static	void bd_copy_from_wd(dict_bin_t *b_head_p, dict_elem_t *head_p, int w_count)$/;"	f	file:
bd_distory	binary_default.c	/^static void bd_distory(dict_bin_t *head_p, int w_count)$/;"	f	file:
bd_distory	binary_user_add.c	/^static void bd_distory(dict_bin_t *head_p, int w_count)$/;"	f	file:
bd_fwrite	binary_default.c	/^static void *bd_fwrite(dict_bin_t *b_head_p, int w_count, char *binary_file_name)$/;"	f	file:
bd_fwrite	binary_user_add.c	/^static void *bd_fwrite(dict_bin_t *b_head_p, int w_count, char *binary_file_name)$/;"	f	file:
bd_have_binary	binary_default.c	/^static dict_bin_t *bd_have_binary(char *binary_file_name, int *w_count)$/;"	f	file:
bd_have_binary	binary_user_add.c	/^static dict_bin_t *bd_have_binary(char *binary_file_name, int *w_count)$/;"	f	file:
bd_no_binary	binary_default.c	/^static dict_bin_t *bd_no_binary(char *txt_file_name, char *binary_file_name , int *w_count)$/;"	f	file:
bd_no_binary	binary_user_add.c	/^static dict_bin_t *bd_no_binary(char *txt_file_name, char *binary_file_name , int *w_count)$/;"	f	file:
bd_print_data	binary_default.c	/^void bd_print_data(dict_bin_t *b_head_p, int w_count)$/;"	f
bd_print_data	binary_user_add.c	/^void bd_print_data(dict_bin_t *b_head_p, int w_count)$/;"	f
bd_print_one_elem	binary_default.c	/^static void bd_print_one_elem(dict_bin_t *word_p)$/;"	f	file:
bd_print_one_elem	binary_user_add.c	/^static void bd_print_one_elem(dict_bin_t *word_p)$/;"	f	file:
bd_search	binary_default.c	/^static dict_bin_t *bd_search(dict_bin_t *head_p, int w_count)$/;"	f	file:
bd_search	binary_user_add.c	/^static dict_bin_t *bd_search(dict_bin_t *head_p, int w_count)$/;"	f	file:
bd_shell_sort	binary_default.c	/^static void bd_shell_sort(dict_bin_t *head_p, int l, int r)$/;"	f	file:
bd_shell_sort	binary_user_add.c	/^static void bd_shell_sort(dict_bin_t *head_p, int l, int r)$/;"	f	file:
dict_bin	binary_default.h	/^typedef struct dict_bin {$/;"	s
dict_bin	binary_user_add.h	/^typedef struct dict_bin {$/;"	s
dict_bin_t	binary_default.h	/^}dict_bin_t;$/;"	t	typeref:struct:dict_bin
dict_bin_t	binary_user_add.h	/^}dict_bin_t;$/;"	t	typeref:struct:dict_bin
dict_elem	ok_word_default/word_default.h	/^typedef struct dict_elem {$/;"	s
dict_elem	word_default.h	/^typedef struct dict_elem {$/;"	s
dict_elem	word_user_add.h	/^typedef struct dict_elem {$/;"	s
dict_elem_t	ok_word_default/word_default.h	/^} dict_elem_t;$/;"	t	typeref:struct:dict_elem
dict_elem_t	word_default.h	/^} dict_elem_t;$/;"	t	typeref:struct:dict_elem
dict_elem_t	word_user_add.h	/^} dict_elem_t;$/;"	t	typeref:struct:dict_elem
init	shell_test.c	/^void init(int l, int r)$/;"	f
insertion	shell_test.c	/^void insertion(int l, int r)$/;"	f
key	binary_default.h	/^	char *key;$/;"	m	struct:dict_bin
key	binary_user_add.h	/^	char *key;$/;"	m	struct:dict_bin
key	ok_word_default/word_default.h	/^	char *key;$/;"	m	struct:dict_elem
key	word_default.h	/^	char *key;$/;"	m	struct:dict_elem
key	word_user_add.h	/^	char *key;$/;"	m	struct:dict_elem
key_len	binary_default.h	/^	int key_len;$/;"	m	struct:dict_bin
key_len	binary_user_add.h	/^	int key_len;$/;"	m	struct:dict_bin
main	dictionary.c	/^int main(int argc, char *argv[])$/;"	f
main	ok_word_default/dictionary.c	/^int main(int argc, char *argv[])$/;"	f
main	shell_test.c	/^int main()$/;"	f
n_trans	binary_default.h	/^	int n_trans;$/;"	m	struct:dict_bin
n_trans	binary_user_add.h	/^	int n_trans;$/;"	m	struct:dict_bin
n_trans	ok_word_default/word_default.h	/^	int n_trans;$/;"	m	struct:dict_elem
n_trans	word_default.h	/^	int n_trans;$/;"	m	struct:dict_elem
n_trans	word_user_add.h	/^	int n_trans;$/;"	m	struct:dict_elem
shell	shell_test.c	/^void shell(int l, int r)$/;"	f
show	shell_test.c	/^void show(int l, int r)$/;"	f
sort	shell_test.c	40;"	d	file:
trans	binary_default.h	/^	char **trans;$/;"	m	struct:dict_bin
trans	binary_user_add.h	/^	char **trans;$/;"	m	struct:dict_bin
trans	ok_word_default/word_default.h	/^	char **trans;$/;"	m	struct:dict_elem
trans	word_default.h	/^	char **trans;$/;"	m	struct:dict_elem
trans	word_user_add.h	/^	char **trans;$/;"	m	struct:dict_elem
wd_binsearch	ok_word_default/word_default.c	/^static dict_elem_t *wd_binsearch(dict_elem_t *head_p, int w_count, char *key_word)$/;"	f	file:
wd_binsearch	word_default.c	/^static dict_elem_t *wd_binsearch(dict_elem_t *head_p, int w_count, char *key_word)$/;"	f	file:
wd_distory	ok_word_default/word_default.c	/^static void wd_distory(dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_distory	word_default.c	/^static void wd_distory(dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_get_elem_count	ok_word_default/word_default.c	/^static int wd_get_elem_count(char *filename)$/;"	f	file:
wd_get_elem_count	word_default.c	/^int wd_get_elem_count(char *filename)$/;"	f
wd_print_data	ok_word_default/word_default.c	/^static void wd_print_data(dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_print_data	word_default.c	/^void wd_print_data(dict_elem_t *head_p, int w_count)$/;"	f
wd_print_one_elem	ok_word_default/word_default.c	/^static void wd_print_one_elem(dict_elem_t *word_p)$/;"	f	file:
wd_print_one_elem	word_default.c	/^static void wd_print_one_elem(dict_elem_t *word_p)$/;"	f	file:
wd_read_elem_from_txt	ok_word_default/word_default.c	/^static dict_elem_t * wd_read_elem_from_txt(char *filename, dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_read_elem_from_txt	word_default.c	/^dict_elem_t * wd_read_elem_from_txt(char *filename, dict_elem_t *head_p, int w_count)$/;"	f
wd_read_key	ok_word_default/word_default.c	/^static char * wd_read_key(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wd_read_key	word_default.c	/^static char * wd_read_key(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wd_read_trans	ok_word_default/word_default.c	/^static char * wd_read_trans(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wd_read_trans	word_default.c	/^static char * wd_read_trans(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wd_remove_first	ok_word_default/word_default.c	/^static void wd_remove_first(char *buf, int len)$/;"	f	file:
wd_remove_first	word_default.c	/^static void wd_remove_first(char *buf, int len)$/;"	f	file:
wd_search	ok_word_default/word_default.c	/^static dict_elem_t *wd_search(dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_search	word_default.c	/^static dict_elem_t *wd_search(dict_elem_t *head_p, int w_count)$/;"	f	file:
wd_shell_sort	ok_word_default/word_default.c	/^static void wd_shell_sort(dict_elem_t *head_p, int l, int r)$/;"	f	file:
wd_shell_sort	word_default.c	/^static void wd_shell_sort(dict_elem_t *head_p, int l, int r)$/;"	f	file:
wd_word_default	ok_word_default/word_default.c	/^void * wd_word_default(char *filename)$/;"	f
wd_word_default	word_default.c	/^void * wd_word_default(char *filename)$/;"	f
wu_binsearch	word_user_add.c	/^static dict_elem_t *wu_binsearch(dict_elem_t *head_p, int w_count, char *key_word)$/;"	f	file:
wu_distory	word_user_add.c	/^static void wu_distory(dict_elem_t *head_p, int w_count)$/;"	f	file:
wu_get_elem_count	word_user_add.c	/^int wu_get_elem_count(char *filename)$/;"	f
wu_print_data	word_user_add.c	/^void wu_print_data(dict_elem_t *head_p, int w_count)$/;"	f
wu_print_one_elem	word_user_add.c	/^static void wu_print_one_elem(dict_elem_t *word_p)$/;"	f	file:
wu_read_elem_from_txt	word_user_add.c	/^dict_elem_t * wu_read_elem_from_txt(char *filename, dict_elem_t *head_p, int w_count)$/;"	f
wu_read_key	word_user_add.c	/^static char * wu_read_key(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wu_read_trans	word_user_add.c	/^static char * wu_read_trans(FILE *fp, dict_elem_t *word_p)$/;"	f	file:
wu_remove_first	word_user_add.c	/^static void wu_remove_first(char *buf, int len)$/;"	f	file:
wu_search	word_user_add.c	/^static dict_elem_t *wu_search(dict_elem_t *head_p, int w_count)$/;"	f	file:
wu_shell_sort	word_user_add.c	/^static void wu_shell_sort(dict_elem_t *head_p, int l, int r)$/;"	f	file:
wu_word_default	word_user_add.c	/^void * wu_word_default(char *u_filename)$/;"	f
